{"ast":null,"code":"// import { Component } from 'react';\n// import ErrorComponent from '../../components/UI/ErrorComponet/ErrorComponent';\n// const withErrorHandler = (WrappedComponent) => {\n//   return class extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = { hasError: false };\n//     }\n//     static getDerivedStateFromError(error) {\n//       return { hasError: true };\n//     }\n//     componentDidCatch(error, info) {}\n//     render() {\n//       if (this.state.hasError) {\n//         return <ErrorComponent hasError={this.state.hasError} />;\n//       }\n//       return WrappedComponent;\n//     }\n//   };\n// };\n// export default withErrorHandler;\n// class ErrorBoundary extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { hasError: false };\n//   }\n//   static getDerivedStateFromError(error) {\n//     return { hasError: true };\n//   }\n//   componentDidCatch(error, info) {}\n//   render() {\n//     if (this.state.hasError) {\n//       return <ErrorComponent hasError={this.state.hasError} />;\n//     }\n//     return this.props.children;\n//   }\n// }\n// export default ErrorBoundary;","map":{"version":3,"sources":["/home/alin/alinSpinjitzu/udemy courses/8_Complete React Developer in 2020/25_react_e-store/src/hoc/withErrorHandler/withErrorHandler.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import { Component } from 'react';\n\n// import ErrorComponent from '../../components/UI/ErrorComponet/ErrorComponent';\n\n// const withErrorHandler = (WrappedComponent) => {\n//   return class extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = { hasError: false };\n//     }\n\n//     static getDerivedStateFromError(error) {\n//       return { hasError: true };\n//     }\n\n//     componentDidCatch(error, info) {}\n\n//     render() {\n//       if (this.state.hasError) {\n//         return <ErrorComponent hasError={this.state.hasError} />;\n//       }\n\n//       return WrappedComponent;\n//     }\n//   };\n// };\n\n// export default withErrorHandler;\n\n// class ErrorBoundary extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { hasError: false };\n//   }\n\n//   static getDerivedStateFromError(error) {\n//     return { hasError: true };\n//   }\n\n//   componentDidCatch(error, info) {}\n\n//   render() {\n//     if (this.state.hasError) {\n//       return <ErrorComponent hasError={this.state.hasError} />;\n//     }\n\n//     return this.props.children;\n//   }\n// }\n\n// export default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}